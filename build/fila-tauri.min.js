"use strict";class Fila{static FilaBackend=class{fila;constructor(fila){this.fila=fila}};static setup(backend,sep,cwd,temp){this.backend=backend,this._sep=sep||"/",this._cwd=cwd,this._temporary=temp}static backend;static get sep(){return this._sep}static _sep="/";static get cwd(){return"string"==typeof this._cwd?this._cwd=new Fila(this._cwd):this._cwd}static _cwd="";static get temporary(){return"string"==typeof this._temporary?this._temporary=new Fila(this._temporary):this._temporary}static _temporary="";static from(via){return"string"==typeof via?new Fila(via):via}constructor(...components){if(this.components=components,"/"!==(components=components.filter((s=>!!s))).join("")){(0===components.length||components[0].startsWith("."))&&components.unshift(Fila.cwd.path);for(let i=-1;++i<components.length;)components.splice(i,1,...components[i].split(Fila.sep));components=components.filter((s=>!!s)),components=Fila.normalize(components.join(Fila.sep)).split(Fila.sep)}let back;back=new Fila.backend(this),this.back=back}components;back;readText(){return this.back.readText()}readBinary(){return this.back.readBinary()}readDirectory(){return this.back.readDirectory()}writeText(text,options){return this.back.writeText(text,options)}writeBinary(buffer){return this.back.writeBinary(buffer)}writeDirectory(){return this.back.writeDirectory()}writeSymlink(at){return this.back.writeSymlink(at)}delete(){return this.back.delete()}move(target){return this.back.move(target)}copy(target){return this.back.copy(target)}watch(a,b){const recursive="recursive"===a,callbackFn=b||a;return this.watchProtected(recursive,callbackFn)}watchProtected(recursive,callbackFn){return this.back.watchProtected(recursive,callbackFn)}rename(newName){return this.back.rename(newName)}exists(){return this.back.exists()}getSize(){return this.back.getSize()}getModifiedTicks(){return this.back.getModifiedTicks()}getCreatedTicks(){return this.back.getCreatedTicks()}getAccessedTicks(){return this.back.getAccessedTicks()}isDirectory(){return this.back.isDirectory()}async getDirectory(){return await this.isDirectory()?this:new Fila(...this.up().components)}get name(){return this.components.at(-1)||""}get extension(){const name=this.name,lastDot=name.lastIndexOf(".");return lastDot<0?"":name.slice(lastDot)}get path(){return Fila.sep+Fila.join(...this.components)}up(count=1){if(this.components.length<2)return this;const parentComponents=this.components.slice(0,-count);return parentComponents.length>0?new Fila(...parentComponents):new Fila("/")}async upscan(relativeFileName){let ancestry=this;do{const maybe=ancestry.down(relativeFileName);if(await maybe.exists())return maybe;if(1===ancestry.components.length)break;ancestry=ancestry.up()}while(ancestry.components.length>0);return null}down(...additionalComponents){return new Fila(...this.components,...additionalComponents)}}var Cover;!function(Fila){function normalize(path){if(0===path.length)return".";const isAbsolute=47===path.charCodeAt(0),trailingSeparator=47===path.charCodeAt(path.length-1);return 0!==(path=normalizeStringPosix(path,!isAbsolute)).length||isAbsolute||(path="."),path.length>0&&trailingSeparator&&(path+=Fila.sep),isAbsolute?Fila.sep+path:path}function normalizeStringPosix(path,allowAboveRoot){let code,res="",lastSegmentLength=0,lastSlash=-1,dots=0;for(let i=0;i<=path.length;++i){if(i<path.length)code=path.charCodeAt(i);else{if(47===code)break;code=47}if(47===code){if(lastSlash===i-1||1===dots);else if(lastSlash!==i-1&&2===dots){if(res.length<2||2!==lastSegmentLength||46!==res.charCodeAt(res.length-1)||46!==res.charCodeAt(res.length-2))if(res.length>2){let lastSlashIndex=res.lastIndexOf(Fila.sep);if(lastSlashIndex!==res.length-1){-1===lastSlashIndex?(res="",lastSegmentLength=0):(res=res.slice(0,lastSlashIndex),lastSegmentLength=res.length-1-res.lastIndexOf(Fila.sep)),lastSlash=i,dots=0;continue}}else if(2===res.length||1===res.length){res="",lastSegmentLength=0,lastSlash=i,dots=0;continue}allowAboveRoot&&(res.length>0?res+="/..":res="..",lastSegmentLength=2)}else res.length>0?res+=Fila.sep+path.slice(lastSlash+1,i):res=path.slice(lastSlash+1,i),lastSegmentLength=i-lastSlash-1;lastSlash=i,dots=0}else 46===code&&-1!==dots?++dots:dots=-1}return res}Fila.join=function(...args){if(0===args.length)return".";let joined;for(let i=0;i<args.length;++i){let arg=args[i];arg.length>0&&(void 0===joined?joined=arg:joined+="/"+arg)}return void 0===joined?".":normalize(joined)},Fila.normalize=normalize,Fila.relative=function(from,to){if(from===to)return"";if((from=posix.resolve(from instanceof Fila?from.path:from))===(to=posix.resolve(to instanceof Fila?to.path:to)))return"";for(var fromStart=1;fromStart<from.length&&47===from.charCodeAt(fromStart);++fromStart);for(var fromEnd=from.length,fromLen=fromEnd-fromStart,toStart=1;toStart<to.length&&47===to.charCodeAt(toStart);++toStart);for(var toLen=to.length-toStart,length=fromLen<toLen?fromLen:toLen,lastCommonSep=-1,i=0;i<=length;++i){if(i===length){if(toLen>length){if(47===to.charCodeAt(toStart+i))return to.slice(toStart+i+1);if(0===i)return to.slice(toStart+i)}else fromLen>length&&(47===from.charCodeAt(fromStart+i)?lastCommonSep=i:0===i&&(lastCommonSep=0));break}var fromCode=from.charCodeAt(fromStart+i);if(fromCode!==to.charCodeAt(toStart+i))break;47===fromCode&&(lastCommonSep=i)}var out="";for(i=fromStart+lastCommonSep+1;i<=fromEnd;++i)i!==fromEnd&&47!==from.charCodeAt(i)||(0===out.length?out+="..":out+="/..");return out.length>0?out+to.slice(toStart+lastCommonSep):(toStart+=lastCommonSep,47===to.charCodeAt(toStart)&&++toStart,to.slice(toStart))};const posix={resolve(...args){for(var cwd,resolvedPath="",resolvedAbsolute=!1,i=args.length-1;i>=-1&&!resolvedAbsolute;i--){var path;i>=0?path=args[i]:(void 0===cwd&&"object"==typeof process&&(cwd=process.cwd()),path=cwd),0!==path.length&&(resolvedPath=path+"/"+resolvedPath,resolvedAbsolute=47===path.charCodeAt(0))}return resolvedPath=normalizeStringPosix(resolvedPath,!resolvedAbsolute),resolvedAbsolute?resolvedPath.length>0?"/"+resolvedPath:"/":resolvedPath.length>0?resolvedPath:"."}};let Char,Event;!function(Char){Char[Char.dot=46]="dot",Char[Char.slash=47]="slash"}(Char||(Char={})),function(Event){Event.create="create",Event.modify="modify",Event.delete="delete"}(Event=Fila.Event||(Fila.Event={}))}(Fila||(Fila={})),"object"==typeof module&&Object.assign(module.exports,{Fila:Fila}),function(Cover){async function coverFila(){const path=globalThis.__TAURI__.path,cwdString=await path.appDataDir(),cwd=new Fila(cwdString),testFile=cwd.down("file.txt");await testFile.writeText(Date.now().toString());const text=await testFile.readText();console.log(text);const dir=cwd.down("dir");await dir.writeDirectory(),await dir.down("a.txt").writeText(Date.now().toString()),await dir.down("b.txt").writeText(Date.now().toString()),await dir.down("c.txt").writeText(Date.now().toString()),await dir.down("a").writeDirectory(),await dir.down("b").writeDirectory(),await dir.down("c").writeDirectory();{const file=dir.down("a.txt");await file.getAccessedTicks(),await file.getCreatedTicks(),await file.getModifiedTicks(),await file.getSize(),await file.getDirectory()}const contents=await dir.readDirectory();for(const entry of contents)console.log(entry.path);dir.watch(((ev,fila)=>{console.log(ev+" - "+fila.path)}))}Cover.coverFila=coverFila,Cover.coverFilaTauri=async function(){new Fila("FilaTauri","+sample").watch(((ev,fila)=>{console.log(ev+": "+fila.path)}))}}(Cover||(Cover={})),"object"==typeof module&&Object.assign(module.exports,{Cover:Cover}),function(Cover){Cover.coverFilaNode=async function(){const fila=new Fila(process.cwd(),"FilaNode","+sample");fila.down("x"),await fila.isDirectory(),fila.watch(((ev,fila)=>{console.log(ev+": "+fila.path)})),process.stdin.resume()}}(Cover||(Cover={})),"object"==typeof module&&Object.assign(module.exports,{Cover:Cover}),(()=>{class FilaTauri extends Fila.FilaBackend{fs=globalThis.__TAURI__.fs;readText(){return this.fs.readTextFile(this.fila.path)}readBinary(){return this.fs.readBinaryFile(this.fila.path)}async readDirectory(){const fileNames=await this.fs.readDir(this.fila.path),filas=[];for(const fileName of fileNames)".DS_Store"!==fileName.name&&filas.push(new Fila(this.fila.path,fileName.name||""));return filas}async writeText(text,options){try{const up=this.fila.up();await up.exists()||await up.writeDirectory(),await this.fs.writeTextFile(this.fila.path,text,{append:options?.append})}catch(e){}}async writeBinary(arrayBuffer){await this.fila.up().writeDirectory(),await this.fs.writeBinaryFile(this.fila.path,arrayBuffer)}async writeDirectory(){this.fs.createDir(this.fila.path,{recursive:!0})}async writeSymlink(at){return null}async delete(){if(await this.isDirectory())return new Promise((async resolve=>{await this.fs.removeDir(this.fila.path,{recursive:!0}),resolve()}));await this.fs.removeFile(this.fila.path)}move(target){return null}async copy(target){if(await target.isDirectory())throw"Copying directories is not implemented.";await this.fs.copyFile(this.fila.path,target.path)}watchProtected(recursive,callbackFn){let un=null;return(async()=>{un=await async function(paths,options,callbackFn){const opts={recursive:!1,delayMs:2e3,...options};let watchPaths;watchPaths="string"==typeof paths?[paths]:paths;const id=window.crypto.getRandomValues(new Uint32Array(1))[0];await tauri.invoke("plugin:fs-watch|watch",{id:id,paths:watchPaths,options:opts});const unlisten=await wind.appWindow.listen(`watcher://raw-event/${id}`,(event=>{callbackFn(event)}));return async()=>{await unwatch(id),unlisten()}}(this.fila.path,{},(async ev=>{if(!un)return;if("string"!=typeof ev.payload.payload)return;const fila=new Fila(ev.payload.payload);"NoticeWrite"===ev.type||"Write"===ev.type?callbackFn("modify",fila):"NoticeRemove"===ev.type||"Remove"===ev.type?callbackFn("delete",fila):"Create"!==ev.type&&"Rename"!==ev.type||callbackFn("modify",fila)}))})(),()=>{un?un():setTimeout((()=>un?.()),100)}}async rename(newName){return this.fs.renameFile(this.fila.path,this.fila.up().down(newName).path)}async exists(){return this.fs.exists(this.fila.path)}async getSize(){return(await this.getMeta()).size}async getModifiedTicks(){return(await this.getMeta()).modifiedAt}async getCreatedTicks(){return(await this.getMeta()).createdAt}async getAccessedTicks(){return(await this.getMeta()).accessedAt}async isDirectory(){return(await this.getMeta()).isDir}async getMeta(){return this._meta||(this._meta=await(path=this.fila.path,tauri.invoke("plugin:fs-extra|metadata",{path:path})));var path}_meta=null}const t=globalThis.__TAURI__,tauri=t.tauri,wind=t.window;async function unwatch(id){await tauri.invoke("plugin:fs-watch|unwatch",{id:id})}{let path=null;try{path=globalThis.__TAURI__.path}catch(e){return void console.log("withGlobalTauri is not set")}const sep=path?.sep||"/",cwd="/",tmp="/";Fila.setup(FilaTauri,sep,cwd,tmp),(async()=>{const tmp=await path.appCacheDir();Fila.setup(FilaTauri,sep,cwd,tmp)})()}})(),function(Cover){Cover.coverFilaWeb=async function(){const dir=new Fila("dir");dir.writeDirectory();const filaText=dir.down("file.txt");await filaText.writeText("yay!");const filaBinary=dir.down("file.bin"),buffer=new Uint8Array([0,1,2]);await filaBinary.writeBinary(buffer);const contents=await dir.readDirectory();for(const fila of contents)console.log(fila.path);await dir.delete()},"object"==typeof module&&Object.assign(module.exports,{Cover:Cover})}(Cover||(Cover={}));
